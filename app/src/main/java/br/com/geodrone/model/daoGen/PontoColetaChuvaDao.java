package br.com.geodrone.model.daoGen;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import br.com.geodrone.model.PontoColetaChuva;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "TB_PONTO_COLETA_CHUVA".
*/
public class PontoColetaChuvaDao extends AbstractDao<PontoColetaChuva, Long> {

    public static final String TABLENAME = "TB_PONTO_COLETA_CHUVA";

    /**
     * Properties of entity PontoColetaChuva.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property IdPontoColetaChuva = new Property(0, Long.class, "idPontoColetaChuva", true, "ID_PONTO_COLETA_CHUVA");
        public final static Property IdClienteRef = new Property(1, Long.class, "idClienteRef", false, "ID_CLIENTE_REF");
        public final static Property Descricao = new Property(2, String.class, "descricao", false, "DESCRICAO");
        public final static Property Latitude = new Property(3, Double.class, "latitude", false, "LATITUDE");
        public final static Property Longitude = new Property(4, Double.class, "longitude", false, "LONGITUDE");
        public final static Property DtInstalacao = new Property(5, java.util.Date.class, "dtInstalacao", false, "DT_INSTALACAO");
        public final static Property DtInclusao = new Property(6, java.util.Date.class, "dtInclusao", false, "DT_INCLUSAO");
        public final static Property DtAlteracao = new Property(7, java.util.Date.class, "dtAlteracao", false, "DT_ALTERACAO");
        public final static Property IdUsuarioRef = new Property(8, Long.class, "idUsuarioRef", false, "ID_USUARIO_REF");
        public final static Property IndAtivo = new Property(9, Integer.class, "indAtivo", false, "IND_ATIVO");
        public final static Property IdPontoColetaChuvaRef = new Property(10, Long.class, "idPontoColetaChuvaRef", false, "ID_PONTO_COLETA_CHUVA_REF");
    }


    public PontoColetaChuvaDao(DaoConfig config) {
        super(config);
    }
    
    public PontoColetaChuvaDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"TB_PONTO_COLETA_CHUVA\" (" + //
                "\"ID_PONTO_COLETA_CHUVA\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: idPontoColetaChuva
                "\"ID_CLIENTE_REF\" INTEGER NOT NULL ," + // 1: idClienteRef
                "\"DESCRICAO\" TEXT NOT NULL ," + // 2: descricao
                "\"LATITUDE\" REAL NOT NULL ," + // 3: latitude
                "\"LONGITUDE\" REAL NOT NULL ," + // 4: longitude
                "\"DT_INSTALACAO\" INTEGER NOT NULL ," + // 5: dtInstalacao
                "\"DT_INCLUSAO\" INTEGER NOT NULL ," + // 6: dtInclusao
                "\"DT_ALTERACAO\" INTEGER NOT NULL ," + // 7: dtAlteracao
                "\"ID_USUARIO_REF\" INTEGER," + // 8: idUsuarioRef
                "\"IND_ATIVO\" INTEGER NOT NULL ," + // 9: indAtivo
                "\"ID_PONTO_COLETA_CHUVA_REF\" INTEGER);"); // 10: idPontoColetaChuvaRef
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"TB_PONTO_COLETA_CHUVA\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, PontoColetaChuva entity) {
        stmt.clearBindings();
 
        Long idPontoColetaChuva = entity.getIdPontoColetaChuva();
        if (idPontoColetaChuva != null) {
            stmt.bindLong(1, idPontoColetaChuva);
        }
        stmt.bindLong(2, entity.getIdClienteRef());
        stmt.bindString(3, entity.getDescricao());
        stmt.bindDouble(4, entity.getLatitude());
        stmt.bindDouble(5, entity.getLongitude());
        stmt.bindLong(6, entity.getDtInstalacao().getTime());
        stmt.bindLong(7, entity.getDtInclusao().getTime());
        stmt.bindLong(8, entity.getDtAlteracao().getTime());
 
        Long idUsuarioRef = entity.getIdUsuarioRef();
        if (idUsuarioRef != null) {
            stmt.bindLong(9, idUsuarioRef);
        }
        stmt.bindLong(10, entity.getIndAtivo());
 
        Long idPontoColetaChuvaRef = entity.getIdPontoColetaChuvaRef();
        if (idPontoColetaChuvaRef != null) {
            stmt.bindLong(11, idPontoColetaChuvaRef);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, PontoColetaChuva entity) {
        stmt.clearBindings();
 
        Long idPontoColetaChuva = entity.getIdPontoColetaChuva();
        if (idPontoColetaChuva != null) {
            stmt.bindLong(1, idPontoColetaChuva);
        }
        stmt.bindLong(2, entity.getIdClienteRef());
        stmt.bindString(3, entity.getDescricao());
        stmt.bindDouble(4, entity.getLatitude());
        stmt.bindDouble(5, entity.getLongitude());
        stmt.bindLong(6, entity.getDtInstalacao().getTime());
        stmt.bindLong(7, entity.getDtInclusao().getTime());
        stmt.bindLong(8, entity.getDtAlteracao().getTime());
 
        Long idUsuarioRef = entity.getIdUsuarioRef();
        if (idUsuarioRef != null) {
            stmt.bindLong(9, idUsuarioRef);
        }
        stmt.bindLong(10, entity.getIndAtivo());
 
        Long idPontoColetaChuvaRef = entity.getIdPontoColetaChuvaRef();
        if (idPontoColetaChuvaRef != null) {
            stmt.bindLong(11, idPontoColetaChuvaRef);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public PontoColetaChuva readEntity(Cursor cursor, int offset) {
        PontoColetaChuva entity = new PontoColetaChuva();
        readEntity(cursor, entity, offset);
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, PontoColetaChuva entity, int offset) {
        entity.setIdPontoColetaChuva(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setIdClienteRef(cursor.getLong(offset + 1));
        entity.setDescricao(cursor.getString(offset + 2));
        entity.setLatitude(cursor.getDouble(offset + 3));
        entity.setLongitude(cursor.getDouble(offset + 4));
        entity.setDtInstalacao(new java.util.Date(cursor.getLong(offset + 5)));
        entity.setDtInclusao(new java.util.Date(cursor.getLong(offset + 6)));
        entity.setDtAlteracao(new java.util.Date(cursor.getLong(offset + 7)));
        entity.setIdUsuarioRef(cursor.isNull(offset + 8) ? null : cursor.getLong(offset + 8));
        entity.setIndAtivo(cursor.getInt(offset + 9));
        entity.setIdPontoColetaChuvaRef(cursor.isNull(offset + 10) ? null : cursor.getLong(offset + 10));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(PontoColetaChuva entity, long rowId) {
        entity.setIdPontoColetaChuva(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(PontoColetaChuva entity) {
        if(entity != null) {
            return entity.getIdPontoColetaChuva();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(PontoColetaChuva entity) {
        return entity.getIdPontoColetaChuva() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
